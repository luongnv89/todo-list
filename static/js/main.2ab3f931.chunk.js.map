{"version":3,"sources":["clientStorage/localStorage.js","actions/index.js","containers/AddTodo.js","components/Todo.js","components/TodoList.js","selectors/index.js","containers/VisibleTodoList.js","containers/FilterTag.js","components/TodoFilter.js","containers/TodoCounting.js","config.js","components/Footer.js","utils/index.js","components/Header.js","containers/Layout.js","containers/AppRoot.js","serviceWorker.js","reducers/todos.js","reducers/sortTodos.js","reducers/clientStorage.js","reducers/index.js","sagas/loadTodoSaga.js","sagas/saveTodoSaga.js","sagas/index.js","configStore.js","index.js"],"names":["module","exports","saveObject","key","value","localStorage","setItem","JSON","stringify","getObject","parse","getItem","deleteObject","removeItem","VisibilityFilters","addTodo","createAction","removeTodo","removeAllTodos","toggleTodo","sortTodos","fetchTodoRequest","fetchTodoReceived","fetchTodoFailed","saveTodoRequest","saveTodoReceived","saveTodoFailed","AddTodo","_ref","input","dispatch","react_default","a","createElement","onSubmit","e","preventDefault","trim","className","ref","node","placeholder","type","onClick","connect","Todo","completed","text","id","createdAt","concat","style","fontSize","Date","toLocaleString","TodoList","todos","marginTop","map","todo","components_Todo","Object","assign","getTodos","state","sortTodoList","createSelector","order","toConsumableArray","sort","b","getVisibilityFilter","filter","t","VisibleTodoList","ownProps","changeTodoOrder","FilterTag","filterTag","children","react_router_dom","exact","to","borderRadius","TodoFilter","total","totalActive","totalCompleted","containers_FilterTag","TodoCounting","length","Footer","config","marginBottom","padding","target","href","getFullYear","Header","fontStyle","color","messages","Math","round","random","getRandomHeaderMessage","Layout","params","match","components_Header","containers_AddTodo","containers_VisibleTodoList","containers_TodoCounting","components_Footer","AppRouter","store","es","react_router","path","component","Boolean","window","location","hostname","createReducer","_createReducer","defineProperty","produce","draft","todoFromCS","push","now","clientStorage_createReducer","fetching","error","saving","combineReducers","status","workerSaga","watcherSaga","regenerator_default","wrap","_context","prev","next","ls","put","t0","stop","_marked","_context2","takeLatest","_marked2","select","sent","saveTodoSaga_marked","saveTodoSaga_marked2","rootSaga","all","fork","watcherLoadTodoSaga","watcherSaveTodoSaga","sagas_marked","sagaMiddleware","createSagaMiddleware","middlewares","createLogger","duration","collapsed","action","setTimeout","composedEnhancers","applyMiddleware","apply","createStore","allReducers","run","ReactDOM","render","AppRoot","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0EAgBAA,EAAOC,QAAU,CACfC,WAbiB,SAACC,EAAKC,GACvBC,aAAaC,QAAQH,EAAKI,KAAKC,UAAUJ,KAazCK,UAVgB,SAACN,GACjB,OAAOI,KAAKG,MAAML,aAAaM,QAAQR,KAUvCS,aAPmB,SAACT,GACpBE,aAAaQ,WAAWV,qNCXbW,EACD,WADCA,EAEK,iBAFLA,EAGE,cAGFC,EAAUC,uBAAa,YACvBC,EAAaD,uBAAa,eAC1BE,EAAiBF,uBAAa,oBAC9BG,EAAaH,uBAAa,eAC1BI,EAAYJ,uBAAa,cAEzBK,EAAmBL,uBAAa,sBAChCM,EAAoBN,uBAAa,uBACjCO,EAAkBP,uBAAa,qBAE/BQ,EAAkBR,uBAAa,qBAC/BS,EAAmBT,uBAAa,sBAChCU,EAAiBV,uBAAa,oBChBvCW,EAAU,SAAAC,GAAkB,IAC1BC,EADWC,EAAeF,EAAfE,SAEf,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QACEC,SAAU,SAACC,GACTA,EAAEC,iBACGP,EAAMzB,MAAMiC,SAGjBP,EAASf,EAAQc,EAAMzB,QACvByB,EAAMzB,MAAQ,MAGhB2B,EAAAC,EAAAC,cAAA,OAAKK,UAAU,cACbP,EAAAC,EAAAC,cAAA,SACEK,UAAU,eACVC,IAAK,SAACC,GACJX,EAAQW,GAEVC,YAAY,4BAGhBV,EAAAC,EAAAC,cAAA,UAAQS,KAAK,SAASJ,UAAU,sBAC9BP,EAAAC,EAAAC,cAAA,KAAGK,UAAU,gBADf,aAGAP,EAAAC,EAAAC,cAAA,UACES,KAAK,SACLJ,UAAU,qBACVK,QAAS,kBAAMb,EAASZ,OAExBa,EAAAC,EAAAC,cAAA,KAAGK,UAAU,kBALf,iBAaOX,EADfA,EAAUiB,cAAUjB,GCTLkB,EA9BF,SAAAjB,GAAA,IAAGT,EAAHS,EAAGT,WAAYF,EAAfW,EAAeX,WAAY6B,EAA3BlB,EAA2BkB,UAAWC,EAAtCnB,EAAsCmB,KAAMC,EAA5CpB,EAA4CoB,GAAIC,EAAhDrB,EAAgDqB,UAAhD,OACXlB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIU,QAAS,kBAAMxB,EAAW6B,IAAKV,UAAS,GAAAY,OAAMJ,EAAY,gBAAkB,KAC9Ef,EAAAC,EAAAC,cAAA,YACGc,GAEHhB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,QACEkB,MAAO,CAAEC,SAAS,UAEhB,IAAIC,KAAKJ,GAAYK,mBAG3BvB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAQU,QAAS,kBAAM1B,EAAW+B,IAAKV,UAAU,sBAC/CP,EAAAC,EAAAC,cAAA,KAAGK,UAAU,qBCeNiB,EA7BE,SAAA3B,GAAA,IAAG4B,EAAH5B,EAAG4B,MAAOrC,EAAVS,EAAUT,WAAYF,EAAtBW,EAAsBX,WAAtB,OACfc,EAAAC,EAAAC,cAAA,OAAKK,UAAU,OAAOa,MAAO,CAAEM,UAAW,SACxC1B,EAAAC,EAAAC,cAAA,OAAKK,UAAU,aACbP,EAAAC,EAAAC,cAAA,SAAOK,UAAU,0BACfP,EAAAC,EAAAC,cAAA,aACGuB,EAAME,IAAI,SAACC,GAAD,OACT5B,EAAAC,EAAAC,cAAC2B,EAADC,OAAAC,OAAA,CAAM3D,IAAKwD,EAAKX,IAAQW,EAAxB,CAA8BxC,WAAYA,EAAYF,WAAYA,4BCNjE8C,EAAW,SAACC,GAAD,OAAWA,EAAMR,OAE5BS,EAAgBC,YAC3B,CALgB,SAACF,GAAD,OAAWA,EAAM5C,WAKrB2C,GACZ,SAACI,EAAOX,GACN,OAAKW,EAGIN,OAAAO,EAAA,EAAAP,CAAIL,GAAOa,KAAK,SAACrC,EAAEsC,GAAH,OAAUtC,EAAEc,UAAYwB,EAAExB,YAF1Ce,OAAAO,EAAA,EAAAP,CAAIL,GAAOa,KAAK,SAACrC,EAAEsC,GAAH,OAAUA,EAAExB,UAAYd,EAAEc,cCLjDyB,EAAsB,SAACf,EAAOgB,GAClC,OAAQA,GACN,IAAK,WACH,OAAOhB,EACT,IAAK,iBACH,OAAOA,EAAMgB,OAAO,SAACC,GAAD,OAAOA,EAAE3B,YAC/B,IAAK,cACH,OAAOU,EAAMgB,OAAO,SAACC,GAAD,OAAQA,EAAE3B,YAChC,QACE,OAAOU,IA8BEkB,EALS9B,YArBA,SAACoB,EAAOW,GAC9B,MAAO,CACLnB,MAAOe,EAAoBN,EAAaD,GAAQW,EAASH,QACzDpD,UAAW4C,EAAM5C,YAIM,SAACU,GAC1B,MAAO,CACLX,WAAY,SAAC6B,GACXlB,EAASX,EAAW6B,KAEtB/B,WAAY,SAAC+B,GACXlB,EAASb,EAAW+B,KAEtB4B,gBAAiB,WACf9C,EAASV,QAKSwB,CAGtBW,GC5BasB,EAXG,SAAAjD,GAAA,IAAGkD,EAAHlD,EAAGkD,UAAWC,EAAdnD,EAAcmD,SAAd,OAChBhD,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CACEC,OAAK,EACLC,GAAkB,aAAdJ,EAA2B,IAA3B,IAAA5B,OAAqC4B,GACzCxC,UAAU,qBACVa,MAAO,CAACgC,aAAc,SAErBJ,ICQUK,EAdI,SAAAxD,GAAA,IAAGyD,EAAHzD,EAAGyD,MAAOC,EAAV1D,EAAU0D,YAAaC,EAAvB3D,EAAuB2D,eAAgBf,EAAvC5C,EAAuC4C,OAAvC,OACjBzC,EAAAC,EAAAC,cAAA,OAAKkB,MAAO,CAACM,UAAW,SACtB1B,EAAAC,EAAAC,cAACuD,EAAD,CAAWV,UAAWhE,GACpBiB,EAAAC,EAAAC,cAAA,QAAMK,UAAS,GAAAY,OAAKsB,IAAW1D,EAA6B,qBAAsB,KAAlF,OAA4FiB,EAAAC,EAAAC,cAAA,QAAMK,UAAU,oBAAoB+C,KAElItD,EAAAC,EAAAC,cAACuD,EAAD,CAAWV,UAAWhE,GACpBiB,EAAAC,EAAAC,cAAA,QAAMK,UAAS,GAAAY,OAAKsB,IAAW1D,EAAgC,qBAAsB,KAArF,WAAmGiB,EAAAC,EAAAC,cAAA,QAAMK,UAAU,oBAAoBgD,KAEzIvD,EAAAC,EAAAC,cAACuD,EAAD,CAAWV,UAAWhE,GACpBiB,EAAAC,EAAAC,cAAA,QAAMK,UAAS,GAAAY,OAAKsB,IAAW1D,EAAmC,qBAAsB,KAAxF,aAAwGiB,EAAAC,EAAAC,cAAA,QAAMK,UAAU,oBAAoBiD,EAApC,MAAuDF,OCCtJI,EAFM7C,YATG,SAACoB,EAAOW,GAC9B,MAAO,CACLU,MAAOrB,EAAMR,MAAMkC,OACnBJ,YAAatB,EAAMR,MAAMgB,OAAO,SAACC,GAAD,OAAQA,EAAE3B,YAAW4C,OACrDH,eAAgBvB,EAAMR,MAAMgB,OAAO,SAACC,GAAD,OAAOA,EAAE3B,YAAW4C,OACvDlB,OAAQG,EAASH,SAIA5B,CAAyB+C,GCZ/BC,EACC,UADDA,EAEI,CACf,kCACA,yCACA,sBACA,+CACA,4DCaWD,EAjBA,kBACb5D,EAAAC,EAAAC,cAAA,OACEK,UAAU,wBACVa,MAAO,CACLM,UAAW,OACXoC,aAAc,OACdC,QAAS,SAGR,aACD/D,EAAAC,EAAAC,cAAA,KAAG8D,OAAO,SAASC,KAAK,+BACrB,iBAVP,GAAA9C,QAYS,IAAIG,MAAQ4C,cAZrB,gCAAA/C,OCF+B0C,KCmBlBM,EAlBA,kBACbnE,EAAAC,EAAAC,cAAA,OACEkB,MAAO,CACL0C,aAAc,OACdM,UAAW,WAHf,eAMe,IACbpE,EAAAC,EAAAC,cAAA,QACEkB,MAAO,CACLiD,MAAO,WAGTrE,EAAAC,EAAAC,cAAA,KAAGK,UAAU,uBALf,IDPkC,WACpC,IAAM+D,EAAWT,EAEjB,OAAOS,EADaC,KAAKC,MAAOD,KAAKE,SAAWH,EAASX,SCUhBe,MCC5BC,EATA,SAAA9E,GAAA,IAAY+E,EAAZ/E,EAAGgF,MAASD,OAAZ,OACb5E,EAAAC,EAAAC,cAAA,OAAKK,UAAU,WACbP,EAAAC,EAAAC,cAAC4E,EAAD,MACA9E,EAAAC,EAAAC,cAAC6E,EAAD,MACA/E,EAAAC,EAAAC,cAAC8E,EAAD,CAAiBvC,OAAQmC,EAAOnC,QAAU,aAC1CzC,EAAAC,EAAAC,cAAC+E,EAAD,MACAjF,EAAAC,EAAAC,cAACgF,EAAD,QCIWC,EAZG,SAAAtF,GAAA,IAAGuF,EAAHvF,EAAGuF,MAAH,OAChBpF,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CAAUD,MAAOA,GACfpF,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,KACEjD,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CAAOC,KAAK,YAAYC,UAAWb,aCGrBc,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASf,MACvB,kHCZSgB,2BAAaC,EAAA,GAAAhE,OAAAiE,EAAA,EAAAjE,CAAAgE,EAEvBvG,EAAoByG,YAAQ,SAACC,EAAOC,GAAR,OAAuBA,KAF5BpE,OAAAiE,EAAA,EAAAjE,CAAAgE,EAGvB9G,EAAUgH,YAAQ,SAACC,EAAOjF,GACzBiF,EAAME,KAAK,CAAElF,GAAIgF,EAAMtC,OAAQ3C,OAAMD,WAAW,EAAOG,UAAWI,KAAK8E,WAJjDtE,OAAAiE,EAAA,EAAAjE,CAAAgE,EAMvB5G,EAAa,SAACuC,EAAOR,GAAR,OAAeQ,EAAMgB,OAAO,SAACC,GAAD,OAAOzB,IAAOyB,EAAEzB,OANlCa,OAAAiE,EAAA,EAAAjE,CAAAgE,EAOvB3G,EAAiB,SAACsC,GAAD,MAAW,KAPLK,OAAAiE,EAAA,EAAAjE,CAAAgE,EAQvB1G,EAAa4G,YAAQ,SAACC,EAAOhF,GAC5BgF,EAAMtE,IAAI,SAACC,GAIT,OAHIA,EAAKX,KAAOA,IACdW,EAAKb,WAAaa,EAAKb,WAElBa,OAbakE,GAFP,ICEND,0BAAc/D,OAAAiE,EAAA,EAAAjE,CAAA,GAExBzC,EAAY2G,YAAQ,SAACC,GAAD,OAAqBA,MAJzB,GCYNJ,2BAAaQ,EAAA,GAAAvE,OAAAiE,EAAA,EAAAjE,CAACuE,EAExB9G,EAAoB,SAAC0C,GAAD,MAAY,CAAEqE,UAAU,KAFrBxE,OAAAiE,EAAA,EAAAjE,CAACuE,EAGxB/G,EAAmB,SAAC2C,GAAD,MAAY,CAAEqE,UAAU,KAHpBxE,OAAAiE,EAAA,EAAAjE,CAACuE,EAIxB7G,EAAkB,SAACyC,EAAOsE,GAAR,MAAmB,CAAEA,WAJhBzE,OAAAiE,EAAA,EAAAjE,CAACuE,EAKxB3G,EAAmB,SAACuC,GAAD,MAAY,CAAEuE,QAAQ,KALlB1E,OAAAiE,EAAA,EAAAjE,CAACuE,EAMxB5G,EAAkB,SAACwC,GAAD,MAAY,CAAEuE,QAAQ,KANjB1E,OAAAiE,EAAA,EAAAjE,CAACuE,EAOxB1G,EAAiB,SAACsC,EAAOsE,GAAR,MAAmB,CAAEA,WAPfF,GANP,CACnBC,UAAU,EACVE,QAAQ,EACRD,MAAO,OCRME,6BAAgB,CAAEhF,QAAOpC,YAAWqH,4DCDzCC,iBAYeC,IAZzB,SAAUD,KAAV,IAAAlF,EAAA,OAAAoF,GAAA5G,EAAA6G,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAII,OAJJF,EAAAC,KAAA,EAEUvF,EAAQyF,aAAa,aAF/BH,EAAAE,KAAA,EAIUE,aAAI5H,EAA4B,OAAVkC,EAAiB,GAAKA,IAJtD,OAAAsF,EAAAE,KAAA,gBAOI,OAPJF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAAAA,EAAAE,KAAA,GAOUE,aAAI3H,EAAeuH,EAAAK,KAP7B,yBAAAL,EAAAM,SAAAC,GAAA,cAYe,SAAUV,KAAV,OAAAC,GAAA5G,EAAA6G,KAAA,SAAAS,GAAA,cAAAA,EAAAP,KAAAO,EAAAN,MAAA,OACb,OADaM,EAAAN,KAAA,EACPO,aAAW,qBAAsBb,IAD1B,wBAAAY,EAAAF,SAAAI,qBCZLd,iBAaeC,IAbzB,SAAUD,KAAV,IAAAlF,EAAA,OAAAoF,GAAA5G,EAAA6G,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEkB,OAFlBF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEwBS,aAAO1F,GAF/B,OAKI,OAHMP,EAFVsF,EAAAY,KAGIT,cAAc,YAAazF,GAH/BsF,EAAAE,KAAA,EAKUE,aAAI,CAACxG,KAAM,uBALrB,OAAAoG,EAAAE,KAAA,gBAQI,OARJF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAAAA,EAAAE,KAAA,GAQUE,aAAI,CAACxG,KAAM,kBAAmB4F,MAAKQ,EAAAK,KAR7C,yBAAAL,EAAAM,SAAAO,GAAA,cAae,SAAUhB,KAAV,OAAAC,GAAA5G,EAAA6G,KAAA,SAAAS,GAAA,cAAAA,EAAAP,KAAAO,EAAAN,MAAA,OACb,OADaM,EAAAN,KAAA,EACPO,aAAW,oBAAqBb,IADzB,wBAAAY,EAAAF,SAAAQ,qBCbUC,IAAV,SAAUA,KAAV,OAAAjB,GAAA5G,EAAA6G,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACb,OADaF,EAAAE,KAAA,EACPc,aAAI,CAACC,aAAKC,IAAsBD,aAAKE,MAD9B,wBAAAnB,EAAAM,SAAAc,ICIf,IAAMC,GAAiBC,cAwBjBC,IArBmBC,uBAAa,CACpCC,UAAU,EACVC,WAAW,IAmBO,CAACL,GAfA,SAAChD,GAAD,OAAW,SAAC6B,GAAD,OAAU,SAACyB,GACzC,OAAOA,EAAO/H,MACZ,IAAK,WACL,IAAK,cACL,IAAK,cACL,IAAK,kBAIH,OAHAgI,WAAW,WACTvD,EAAMrF,SAASN,MACd,KACIwH,EAAKyB,GACd,QACE,OAAOzB,EAAKyB,SAKdE,GAAoB,KAKtBA,GAAoBC,kBAAeC,WAAf,EAAmBR,IAEzC,IAAMlD,GAAQ2D,sBAAYC,GAAaJ,IAEvCR,GAAea,IAAInB,IACnB1C,GAAMrF,SAAST,KACA8F,UCnCf8D,IAASC,OAAOnJ,EAAAC,EAAAC,cAACkJ,EAAD,CAAShE,MAAOA,KAAWiE,SAASC,eAAe,STwH7D,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.2ab3f931.chunk.js","sourcesContent":["/**\n * Work with localStorage\n */\n\nconst saveObject = (key, value) => {\n  localStorage.setItem(key, JSON.stringify(value));\n}\n\nconst getObject = (key) => {\n  return JSON.parse(localStorage.getItem(key));\n}\n\nconst deleteObject = (key) => {\n  localStorage.removeItem(key);\n}\n\nmodule.exports = {\n  saveObject,\n  getObject,\n  deleteObject,\n};\n","import { createAction } from 'redux-act';\n\nexport const VisibilityFilters = {\n  SHOW_ALL: 'SHOW_ALL',\n  SHOW_COMPLETED: 'SHOW_COMPLETED',\n  SHOW_ACTIVE: 'SHOW_ACTIVE',\n};\n\nexport const addTodo = createAction('ADD_TODO');\nexport const removeTodo = createAction('REMOVE_TODO');\nexport const removeAllTodos = createAction('REMOVE_ALL_TODOS');\nexport const toggleTodo = createAction('TOGGLE_TODO');\nexport const sortTodos = createAction('SORT_TODOS');\n// Offline - first\nexport const fetchTodoRequest = createAction('FETCH_TODO_REQUEST');\nexport const fetchTodoReceived = createAction('FETCH_TODO_RECEIVED');\nexport const fetchTodoFailed = createAction('FETCH_TODO_FAILED');\n\nexport const saveTodoRequest = createAction('SAVE_TODO_REQUEST');\nexport const saveTodoReceived = createAction('SAVE_TODO_RECEIVED');\nexport const saveTodoFailed = createAction('SAVE_TODO_FAILED');\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { addTodo, removeAllTodos } from '../actions';\n/* jshint ignore:start */\nlet AddTodo = ({ dispatch }) => {\n  let input;\n  return (\n    <div>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          if (!input.value.trim()) {\n            return;\n          }\n          dispatch(addTodo(input.value));\n          input.value = '';\n        }}\n      >\n        <div className=\"form-group\">\n          <input\n            className=\"form-control\"\n            ref={(node) => {\n              input = node;\n            }}\n            placeholder=\"What do you want to do\"\n          />\n        </div>\n        <button type=\"submit\" className=\"btn btn-sm btnTodo\">\n          <i className=\"fas fa-plus\"/> Add Todo\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn-sm btnTodo\"\n          onClick={() => dispatch(removeAllTodos())}\n        >\n          <i className=\"fas fa-eraser\"/> Clear All\n        </button>\n      </form>\n    </div>\n  );\n};\n\nAddTodo = connect()(AddTodo);\nexport default AddTodo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n/* jshint ignore:start */\nconst Todo = ({ toggleTodo, removeTodo, completed, text, id, createdAt }) => (\n  <tr>\n    <th onClick={() => toggleTodo(id)} className={`${ completed ? 'todoCompleted' : ''}`}>\n      <span>\n        {text}\n      </span>\n      <br/>\n      <span\n        style={{ fontSize:'0.7em' }}\n      >\n        {(new Date(createdAt)).toLocaleString()}\n      </span>\n    </th>\n    <th>\n      <button onClick={() => removeTodo(id)} className=\"btn btnTodo btn-sm\">\n        <i className=\"fas fa-trash\" />\n      </button>\n    </th>\n  </tr>\n);\n\nTodo.propTypes = {\n  toggleTodo: PropTypes.func.isRequired,\n  removeTodo: PropTypes.func.isRequired,\n  completed: PropTypes.bool.isRequired,\n  text: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  createdAt: PropTypes.number.isRequired,\n};\n\nexport default Todo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Todo from './Todo';\n/* jshint ignore:start */\nconst TodoList = ({ todos, toggleTodo, removeTodo }) => (\n  <div className=\"card\" style={{ marginTop: '30px' }}>\n    <div className=\"card-body\">\n      <table className=\"table table-borderless\">\n        <tbody>\n          {todos.map((todo) => (\n            <Todo key={todo.id} {...todo} toggleTodo={toggleTodo} removeTodo={removeTodo} />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  </div>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      completed: PropTypes.bool.isRequired,\n      text: PropTypes.string.isRequired,\n      createdAt: PropTypes.number.isRequired,\n    }).isRequired,\n  ).isRequired,\n  sortTodos: PropTypes.bool.isRequired,\n  toggleTodo: PropTypes.func.isRequired,\n  removeTodo: PropTypes.func.isRequired,\n  changeTodoOrder: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import { createSelector } from 'reselect';\n\nconst orderList = (state) => state.sortTodos;\n\nexport const getTodos = (state) => state.todos;\n\nexport const sortTodoList =  createSelector(\n  [orderList, getTodos],\n  (order, todos) => {\n    if (!order) {\n      return [...todos].sort((a,b) => (b.completed - a.completed));\n    } else {\n      return [...todos].sort((a,b) => (a.completed - b.completed));\n    }\n  }\n);","import { connect } from 'react-redux';\nimport { toggleTodo, removeTodo, sortTodos } from '../actions';\nimport TodoList from '../components/TodoList';\nimport { sortTodoList } from '../selectors';\n\nconst getVisibilityFilter = (todos, filter) => {\n  switch (filter) {\n    case 'SHOW_ALL':\n      return todos;\n    case 'SHOW_COMPLETED':\n      return todos.filter((t) => t.completed);\n    case 'SHOW_ACTIVE':\n      return todos.filter((t) => !t.completed);\n    default:\n      return todos;\n  }\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    todos: getVisibilityFilter(sortTodoList(state), ownProps.filter),\n    sortTodos: state.sortTodos,\n  };\n};\n/* jshint ignore:start */\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    toggleTodo: (id) => {\n      dispatch(toggleTodo(id));\n    },\n    removeTodo: (id) => {\n      dispatch(removeTodo(id));\n    },\n    changeTodoOrder: () => {\n      dispatch(sortTodos());\n    },\n  };\n};\n\nconst VisibleTodoList = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TodoList);\n\nexport default VisibleTodoList;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n/* jshint ignore:start */\nconst FilterTag = ({ filterTag, children }) => (\n  <NavLink\n    exact\n    to={filterTag === 'SHOW_ALL' ? '/' : `/${filterTag}`}\n    className=\"btn btn-sm btnTodo\"\n    style={{borderRadius: '30px'}}\n  >\n    {children}\n  </NavLink>\n);\n\nexport default FilterTag;\n","import React from 'react';\nimport FilterTag from '../containers/FilterTag';\nimport { VisibilityFilters } from '../actions';\n/* jshint ignore:start */\nconst TodoFilter = ({ total, totalActive, totalCompleted, filter }) => (\n  <div style={{marginTop: '20px'}}>\n    <FilterTag filterTag={VisibilityFilters.SHOW_ALL}>\n      <span className={`${filter === VisibilityFilters.SHOW_ALL ? 'font-weight-bolder': ''}`}>All <span className=\"badge badge-dark\">{total}</span></span>\n    </FilterTag>\n    <FilterTag filterTag={VisibilityFilters.SHOW_ACTIVE}>\n      <span className={`${filter === VisibilityFilters.SHOW_ACTIVE ? 'font-weight-bolder': ''}`}> Active <span className=\"badge badge-dark\">{totalActive}</span></span>\n    </FilterTag>\n    <FilterTag filterTag={VisibilityFilters.SHOW_COMPLETED}>\n      <span className={`${filter === VisibilityFilters.SHOW_COMPLETED ? 'font-weight-bolder': ''}`}>Completed <span className=\"badge badge-dark\">{totalCompleted} / {total}</span></span>\n    </FilterTag>\n  </div>\n);\n\nexport default TodoFilter;\n","import { connect } from 'react-redux';\nimport Footer from '../components/TodoFilter';\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    total: state.todos.length,\n    totalActive: state.todos.filter((t) => !t.completed).length,\n    totalCompleted: state.todos.filter((t) => t.completed).length,\n    filter: ownProps.filter,\n  };\n};\n\nconst TodoCounting = connect(mapStateToProps)(Footer);\n\nexport default TodoCounting;\n","export default {\n  TODO_VERSION: '0.0.1.0',\n  HEADER_MESSAGES: [\n    'Only add what you will do today',\n    'Do not add more than 6 tasks for today',\n    'Focus, focus, focus',\n    'The tasks you should add: urgent + important',\n    'The tasks you should not add: not urgent + not important',\n  ]\n};","import React from 'react';\nimport { getVersion } from '../utils';\n// Website footer\nconst Footer = () => (\n  <div\n    className=\"text-center container\"\n    style={{\n      marginTop: '30px',\n      marginBottom: '30px',\n      padding: '20px',\n    }}\n  >\n      {'Copyright '}\n      <a target=\"_black\" href=\"https://luongnv89.github.io\">\n        {'Luong NGUYEN '}\n      </a>\n      {`${(new Date()).getFullYear()} - Todo application version ${getVersion()}`}\n    </div>\n);\n\nexport default Footer;\n","import config from '../config';\n\nexport const getVersion = () => (config.TODO_VERSION);\n\nexport const getRandomHeaderMessage = () => {\n  const messages = config.HEADER_MESSAGES;\n  const randomIndex = Math.round((Math.random() * messages.length));\n  return messages[randomIndex];\n};","import React from 'react';\nimport { getRandomHeaderMessage } from '../utils';\n// Website footer\nconst Header = () => (\n  <div\n    style={{\n      marginBottom: '20px',\n      fontStyle: 'italic',\n    }}\n  >\n    Today's tip:{' '}\n    <span\n      style={{\n        color: 'orange',\n      }}\n    >\n      <i className=\"fas fa-info-circle\"/> {getRandomHeaderMessage()}\n    </span>\n  </div>\n);\n\nexport default Header;\n","import React from 'react';\nimport '../App.css';\nimport AddTodo from './AddTodo';\nimport VisibleTodoList from './VisibleTodoList';\nimport TodoCounting from './TodoCounting';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\n/* jshint ignore:start */\nconst Layout = ({ match: { params } }) => (\n  <div className=\"TodoApp\">\n    <Header />\n    <AddTodo />\n    <VisibleTodoList filter={params.filter || 'SHOW_ALL'} />\n    <TodoCounting />\n    <Footer />\n  </div>\n);\nexport default Layout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Layout from './Layout';\n/* jshint ignore:start */\nconst AppRouter = ({ store }) => (\n  <Provider store={store}>\n    <Router>\n      <Route path=\"/:filter?\" component={Layout} />\n    </Router>\n  </Provider>\n);\n\nAppRouter.propTypes = {\n  store: PropTypes.object.isRequired,\n};\n\nexport default AppRouter;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createReducer } from 'redux-act';\nimport { addTodo, removeTodo, toggleTodo, removeAllTodos, fetchTodoReceived } from '../actions';\nimport produce from 'immer';\n\nconst initialState = [];\n/* jshint ignore:start */\nexport default createReducer(\n  {\n    [fetchTodoReceived]: produce((draft, todoFromCS) => todoFromCS ),\n    [addTodo]: produce((draft, text) => {\n      draft.push({ id: draft.length, text, completed: false, createdAt: Date.now() });\n    }),\n    [removeTodo]: (todos, id) => todos.filter((t) => id !== t.id),\n    [removeAllTodos]: (todos) => [],\n    [toggleTodo]: produce((draft, id) => {\n      draft.map((todo) => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      });\n    }),\n  },\n  initialState,\n);\n\n// export default createReducer((on, off) => {\n//   on(addTodo, (todos, text) => [...todos, { text: text, completed: false }]);\n//   on(removeTodo, (todos, id) => todos.filter((t, index) => id !== index));\n//   on(removeAllTodos,todos => []);\n//   on(toggleTodo, (todos, id) =>\n//       todos.map((todo, index) => {\n//         if (index === id) {\n//           return Object.assign({}, todo, {\n//             completed: !todo.completed\n//           });\n//         }\n//         return todo;\n//       }));\n// }, initialState);\n","import { createReducer } from 'redux-act';\nimport { sortTodos } from '../actions';\nimport produce from 'immer';\n\nconst initialState = true;\n/* jshint ignore:start */\nexport default createReducer(\n  {\n    [sortTodos]: produce((draft) => (draft = !draft)),\n  },\n  initialState,\n);\n","import { createReducer } from 'redux-act';\nimport {\n  fetchTodoReceived,\n  fetchTodoRequest,\n  fetchTodoFailed,\n  saveTodoReceived,\n  saveTodoRequest,\n  saveTodoFailed,\n} from '../actions';\n\nconst initialState = {\n  fetching: false,\n  saving: false,\n  error: null,\n};\n/* jshint ignore:start */\nexport default createReducer(\n  {\n    [fetchTodoReceived]: (state) => ({ fetching: false }),\n    [fetchTodoRequest]: (state) => ({ fetching: true }),\n    [fetchTodoFailed]: (state, error) => ({ error }),\n    [saveTodoReceived]: (state) => ({ saving: false }),\n    [saveTodoRequest]: (state) => ({ saving: true }),\n    [saveTodoFailed]: (state, error) => ({ error }),\n  },\n  initialState,\n);\n\n// export default createReducer((on, off) => {\n//   on(addTodo, (todos, text) => [...todos, { text: text, completed: false }]);\n//   on(removeTodo, (todos, id) => todos.filter((t, index) => id !== index));\n//   on(removeAllTodos,todos => []);\n//   on(toggleTodo, (todos, id) =>\n//       todos.map((todo, index) => {\n//         if (index === id) {\n//           return Object.assign({}, todo, {\n//             completed: !todo.completed\n//           });\n//         }\n//         return todo;\n//       }));\n// }, initialState);\n","import { combineReducers } from 'redux';\nimport todos from './todos';\nimport sortTodos from './sortTodos';\nimport status from './clientStorage';\n\nexport default combineReducers({ todos, sortTodos, status });\n","import { takeLatest, put } from 'redux-saga/effects';\nimport * as ls from '../clientStorage/localStorage';\nimport { fetchTodoReceived, fetchTodoFailed} from '../actions';\n// worker saga: makes the api call when watcher saga sees the action\nfunction* workerSaga() {\n  try {\n    const todos = ls.getObject('TODO-LIST');\n    // dispatch a success action to the store with the new dog\n    yield put(fetchTodoReceived(todos === null ? [] : todos));\n  } catch (error) {\n    // dispatch a failure action to the store with the error\n    yield put(fetchTodoFailed(error));\n  }\n}\n\n// watcher saga: watches for actions dispatched to the store, starts worker saga\nexport default function* watcherSaga() {\n  yield takeLatest('FETCH_TODO_REQUEST', workerSaga);\n}\n","import { takeLatest, put, select } from 'redux-saga/effects';\nimport { getTodos } from '../selectors';\nimport * as ls from '../clientStorage/localStorage';\n// worker saga: makes the api call when watcher saga sees the action\nfunction* workerSaga() {\n  try {\n    const todos = yield select(getTodos);\n    ls.saveObject('TODO-LIST', todos);\n    // dispatch a success action to the store with the new dog\n    yield put({type: 'SAVE_TODO_RECEIVED'});\n  } catch (error) {\n    // dispatch a failure action to the store with the error\n    yield put({type: 'SAVE_TODO_FALED', error});\n  }\n}\n\n// watcher saga: watches for actions dispatched to the store, starts worker saga\nexport default function* watcherSaga() {\n  yield takeLatest('SAVE_TODO_REQUEST', workerSaga);\n}\n","import { all, fork } from 'redux-saga/effects';\nimport watcherLoadTodoSaga from './loadTodoSaga';\nimport watcherSaveTodoSaga from './saveTodoSaga';\n\nexport default function* rootSaga() {\n  yield all([fork(watcherLoadTodoSaga), fork(watcherSaveTodoSaga)]);\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport allReducers from './reducers';\nimport rootSaga from './sagas';\nimport { fetchTodoRequest, saveTodoRequest } from './actions';\n// create the saga middleware\nconst sagaMiddleware = createSagaMiddleware();\n\n/* jshint ignore:start */\nconst loggerMiddleware = createLogger({\n  duration: true,\n  collapsed: true,\n});\n\n// middleware\nconst autoSaveTodo = (store) => (next) => (action) => {\n  switch(action.type) {\n    case 'ADD_TODO':\n    case 'REMOVE_TODO':\n    case 'TOGGLE_TODO':\n    case 'REMOVE_ALL_TODO':\n      setTimeout(() => {\n        store.dispatch(saveTodoRequest());\n      }, 500);\n      return next(action);\n    default:\n      return next(action);\n  }\n}\n\nconst middlewares = [sagaMiddleware, autoSaveTodo];\nlet composedEnhancers = null;\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(loggerMiddleware);\n  composedEnhancers = composeWithDevTools(applyMiddleware(...middlewares));\n} else {\n  composedEnhancers = applyMiddleware(...middlewares);\n}\nconst store = createStore(allReducers, composedEnhancers);\n// run the saga\nsagaMiddleware.run(rootSaga);\nstore.dispatch(fetchTodoRequest());\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport AppRoot from './containers/AppRoot';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport store from './configStore';\n\nReactDOM.render(<AppRoot store={store} />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}